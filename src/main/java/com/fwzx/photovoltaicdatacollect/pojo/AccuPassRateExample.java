package com.fwzx.photovoltaicdatacollect.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class AccuPassRateExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    public AccuPassRateExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("id like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("id not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDataTimeIsNull() {
            addCriterion("data_time is null");
            return (Criteria) this;
        }

        public Criteria andDataTimeIsNotNull() {
            addCriterion("data_time is not null");
            return (Criteria) this;
        }

        public Criteria andDataTimeEqualTo(Date value) {
            addCriterion("data_time =", value, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeNotEqualTo(Date value) {
            addCriterion("data_time <>", value, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeGreaterThan(Date value) {
            addCriterion("data_time >", value, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("data_time >=", value, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeLessThan(Date value) {
            addCriterion("data_time <", value, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeLessThanOrEqualTo(Date value) {
            addCriterion("data_time <=", value, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeIn(List<Date> values) {
            addCriterion("data_time in", values, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeNotIn(List<Date> values) {
            addCriterion("data_time not in", values, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeBetween(Date value1, Date value2) {
            addCriterion("data_time between", value1, value2, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeNotBetween(Date value1, Date value2) {
            addCriterion("data_time not between", value1, value2, "dataTime");
            return (Criteria) this;
        }

        public Criteria andRootMesquErrIsNull() {
            addCriterion("root_mesqu_err is null");
            return (Criteria) this;
        }

        public Criteria andRootMesquErrIsNotNull() {
            addCriterion("root_mesqu_err is not null");
            return (Criteria) this;
        }

        public Criteria andRootMesquErrEqualTo(Double value) {
            addCriterion("root_mesqu_err =", value, "rootMesquErr");
            return (Criteria) this;
        }

        public Criteria andRootMesquErrNotEqualTo(Double value) {
            addCriterion("root_mesqu_err <>", value, "rootMesquErr");
            return (Criteria) this;
        }

        public Criteria andRootMesquErrGreaterThan(Double value) {
            addCriterion("root_mesqu_err >", value, "rootMesquErr");
            return (Criteria) this;
        }

        public Criteria andRootMesquErrGreaterThanOrEqualTo(Double value) {
            addCriterion("root_mesqu_err >=", value, "rootMesquErr");
            return (Criteria) this;
        }

        public Criteria andRootMesquErrLessThan(Double value) {
            addCriterion("root_mesqu_err <", value, "rootMesquErr");
            return (Criteria) this;
        }

        public Criteria andRootMesquErrLessThanOrEqualTo(Double value) {
            addCriterion("root_mesqu_err <=", value, "rootMesquErr");
            return (Criteria) this;
        }

        public Criteria andRootMesquErrIn(List<Double> values) {
            addCriterion("root_mesqu_err in", values, "rootMesquErr");
            return (Criteria) this;
        }

        public Criteria andRootMesquErrNotIn(List<Double> values) {
            addCriterion("root_mesqu_err not in", values, "rootMesquErr");
            return (Criteria) this;
        }

        public Criteria andRootMesquErrBetween(Double value1, Double value2) {
            addCriterion("root_mesqu_err between", value1, value2, "rootMesquErr");
            return (Criteria) this;
        }

        public Criteria andRootMesquErrNotBetween(Double value1, Double value2) {
            addCriterion("root_mesqu_err not between", value1, value2, "rootMesquErr");
            return (Criteria) this;
        }

        public Criteria andAvgAbsErrIsNull() {
            addCriterion("avg_abs_err is null");
            return (Criteria) this;
        }

        public Criteria andAvgAbsErrIsNotNull() {
            addCriterion("avg_abs_err is not null");
            return (Criteria) this;
        }

        public Criteria andAvgAbsErrEqualTo(Double value) {
            addCriterion("avg_abs_err =", value, "avgAbsErr");
            return (Criteria) this;
        }

        public Criteria andAvgAbsErrNotEqualTo(Double value) {
            addCriterion("avg_abs_err <>", value, "avgAbsErr");
            return (Criteria) this;
        }

        public Criteria andAvgAbsErrGreaterThan(Double value) {
            addCriterion("avg_abs_err >", value, "avgAbsErr");
            return (Criteria) this;
        }

        public Criteria andAvgAbsErrGreaterThanOrEqualTo(Double value) {
            addCriterion("avg_abs_err >=", value, "avgAbsErr");
            return (Criteria) this;
        }

        public Criteria andAvgAbsErrLessThan(Double value) {
            addCriterion("avg_abs_err <", value, "avgAbsErr");
            return (Criteria) this;
        }

        public Criteria andAvgAbsErrLessThanOrEqualTo(Double value) {
            addCriterion("avg_abs_err <=", value, "avgAbsErr");
            return (Criteria) this;
        }

        public Criteria andAvgAbsErrIn(List<Double> values) {
            addCriterion("avg_abs_err in", values, "avgAbsErr");
            return (Criteria) this;
        }

        public Criteria andAvgAbsErrNotIn(List<Double> values) {
            addCriterion("avg_abs_err not in", values, "avgAbsErr");
            return (Criteria) this;
        }

        public Criteria andAvgAbsErrBetween(Double value1, Double value2) {
            addCriterion("avg_abs_err between", value1, value2, "avgAbsErr");
            return (Criteria) this;
        }

        public Criteria andAvgAbsErrNotBetween(Double value1, Double value2) {
            addCriterion("avg_abs_err not between", value1, value2, "avgAbsErr");
            return (Criteria) this;
        }

        public Criteria andCoeffCorrIsNull() {
            addCriterion("coeff_corr is null");
            return (Criteria) this;
        }

        public Criteria andCoeffCorrIsNotNull() {
            addCriterion("coeff_corr is not null");
            return (Criteria) this;
        }

        public Criteria andCoeffCorrEqualTo(Double value) {
            addCriterion("coeff_corr =", value, "coeffCorr");
            return (Criteria) this;
        }

        public Criteria andCoeffCorrNotEqualTo(Double value) {
            addCriterion("coeff_corr <>", value, "coeffCorr");
            return (Criteria) this;
        }

        public Criteria andCoeffCorrGreaterThan(Double value) {
            addCriterion("coeff_corr >", value, "coeffCorr");
            return (Criteria) this;
        }

        public Criteria andCoeffCorrGreaterThanOrEqualTo(Double value) {
            addCriterion("coeff_corr >=", value, "coeffCorr");
            return (Criteria) this;
        }

        public Criteria andCoeffCorrLessThan(Double value) {
            addCriterion("coeff_corr <", value, "coeffCorr");
            return (Criteria) this;
        }

        public Criteria andCoeffCorrLessThanOrEqualTo(Double value) {
            addCriterion("coeff_corr <=", value, "coeffCorr");
            return (Criteria) this;
        }

        public Criteria andCoeffCorrIn(List<Double> values) {
            addCriterion("coeff_corr in", values, "coeffCorr");
            return (Criteria) this;
        }

        public Criteria andCoeffCorrNotIn(List<Double> values) {
            addCriterion("coeff_corr not in", values, "coeffCorr");
            return (Criteria) this;
        }

        public Criteria andCoeffCorrBetween(Double value1, Double value2) {
            addCriterion("coeff_corr between", value1, value2, "coeffCorr");
            return (Criteria) this;
        }

        public Criteria andCoeffCorrNotBetween(Double value1, Double value2) {
            addCriterion("coeff_corr not between", value1, value2, "coeffCorr");
            return (Criteria) this;
        }

        public Criteria andPassRateIsNull() {
            addCriterion("pass_rate is null");
            return (Criteria) this;
        }

        public Criteria andPassRateIsNotNull() {
            addCriterion("pass_rate is not null");
            return (Criteria) this;
        }

        public Criteria andPassRateEqualTo(Double value) {
            addCriterion("pass_rate =", value, "passRate");
            return (Criteria) this;
        }

        public Criteria andPassRateNotEqualTo(Double value) {
            addCriterion("pass_rate <>", value, "passRate");
            return (Criteria) this;
        }

        public Criteria andPassRateGreaterThan(Double value) {
            addCriterion("pass_rate >", value, "passRate");
            return (Criteria) this;
        }

        public Criteria andPassRateGreaterThanOrEqualTo(Double value) {
            addCriterion("pass_rate >=", value, "passRate");
            return (Criteria) this;
        }

        public Criteria andPassRateLessThan(Double value) {
            addCriterion("pass_rate <", value, "passRate");
            return (Criteria) this;
        }

        public Criteria andPassRateLessThanOrEqualTo(Double value) {
            addCriterion("pass_rate <=", value, "passRate");
            return (Criteria) this;
        }

        public Criteria andPassRateIn(List<Double> values) {
            addCriterion("pass_rate in", values, "passRate");
            return (Criteria) this;
        }

        public Criteria andPassRateNotIn(List<Double> values) {
            addCriterion("pass_rate not in", values, "passRate");
            return (Criteria) this;
        }

        public Criteria andPassRateBetween(Double value1, Double value2) {
            addCriterion("pass_rate between", value1, value2, "passRate");
            return (Criteria) this;
        }

        public Criteria andPassRateNotBetween(Double value1, Double value2) {
            addCriterion("pass_rate not between", value1, value2, "passRate");
            return (Criteria) this;
        }

        public Criteria andPassrateChecpowerIsNull() {
            addCriterion("passrate_checpower is null");
            return (Criteria) this;
        }

        public Criteria andPassrateChecpowerIsNotNull() {
            addCriterion("passrate_checpower is not null");
            return (Criteria) this;
        }

        public Criteria andPassrateChecpowerEqualTo(Double value) {
            addCriterion("passrate_checpower =", value, "passrateChecpower");
            return (Criteria) this;
        }

        public Criteria andPassrateChecpowerNotEqualTo(Double value) {
            addCriterion("passrate_checpower <>", value, "passrateChecpower");
            return (Criteria) this;
        }

        public Criteria andPassrateChecpowerGreaterThan(Double value) {
            addCriterion("passrate_checpower >", value, "passrateChecpower");
            return (Criteria) this;
        }

        public Criteria andPassrateChecpowerGreaterThanOrEqualTo(Double value) {
            addCriterion("passrate_checpower >=", value, "passrateChecpower");
            return (Criteria) this;
        }

        public Criteria andPassrateChecpowerLessThan(Double value) {
            addCriterion("passrate_checpower <", value, "passrateChecpower");
            return (Criteria) this;
        }

        public Criteria andPassrateChecpowerLessThanOrEqualTo(Double value) {
            addCriterion("passrate_checpower <=", value, "passrateChecpower");
            return (Criteria) this;
        }

        public Criteria andPassrateChecpowerIn(List<Double> values) {
            addCriterion("passrate_checpower in", values, "passrateChecpower");
            return (Criteria) this;
        }

        public Criteria andPassrateChecpowerNotIn(List<Double> values) {
            addCriterion("passrate_checpower not in", values, "passrateChecpower");
            return (Criteria) this;
        }

        public Criteria andPassrateChecpowerBetween(Double value1, Double value2) {
            addCriterion("passrate_checpower between", value1, value2, "passrateChecpower");
            return (Criteria) this;
        }

        public Criteria andPassrateChecpowerNotBetween(Double value1, Double value2) {
            addCriterion("passrate_checpower not between", value1, value2, "passrateChecpower");
            return (Criteria) this;
        }

        public Criteria andAccuRateIsNull() {
            addCriterion("accu_rate is null");
            return (Criteria) this;
        }

        public Criteria andAccuRateIsNotNull() {
            addCriterion("accu_rate is not null");
            return (Criteria) this;
        }

        public Criteria andAccuRateEqualTo(Double value) {
            addCriterion("accu_rate =", value, "accuRate");
            return (Criteria) this;
        }

        public Criteria andAccuRateNotEqualTo(Double value) {
            addCriterion("accu_rate <>", value, "accuRate");
            return (Criteria) this;
        }

        public Criteria andAccuRateGreaterThan(Double value) {
            addCriterion("accu_rate >", value, "accuRate");
            return (Criteria) this;
        }

        public Criteria andAccuRateGreaterThanOrEqualTo(Double value) {
            addCriterion("accu_rate >=", value, "accuRate");
            return (Criteria) this;
        }

        public Criteria andAccuRateLessThan(Double value) {
            addCriterion("accu_rate <", value, "accuRate");
            return (Criteria) this;
        }

        public Criteria andAccuRateLessThanOrEqualTo(Double value) {
            addCriterion("accu_rate <=", value, "accuRate");
            return (Criteria) this;
        }

        public Criteria andAccuRateIn(List<Double> values) {
            addCriterion("accu_rate in", values, "accuRate");
            return (Criteria) this;
        }

        public Criteria andAccuRateNotIn(List<Double> values) {
            addCriterion("accu_rate not in", values, "accuRate");
            return (Criteria) this;
        }

        public Criteria andAccuRateBetween(Double value1, Double value2) {
            addCriterion("accu_rate between", value1, value2, "accuRate");
            return (Criteria) this;
        }

        public Criteria andAccuRateNotBetween(Double value1, Double value2) {
            addCriterion("accu_rate not between", value1, value2, "accuRate");
            return (Criteria) this;
        }

        public Criteria andAccurateChecpowerIsNull() {
            addCriterion("accurate_checpower is null");
            return (Criteria) this;
        }

        public Criteria andAccurateChecpowerIsNotNull() {
            addCriterion("accurate_checpower is not null");
            return (Criteria) this;
        }

        public Criteria andAccurateChecpowerEqualTo(Double value) {
            addCriterion("accurate_checpower =", value, "accurateChecpower");
            return (Criteria) this;
        }

        public Criteria andAccurateChecpowerNotEqualTo(Double value) {
            addCriterion("accurate_checpower <>", value, "accurateChecpower");
            return (Criteria) this;
        }

        public Criteria andAccurateChecpowerGreaterThan(Double value) {
            addCriterion("accurate_checpower >", value, "accurateChecpower");
            return (Criteria) this;
        }

        public Criteria andAccurateChecpowerGreaterThanOrEqualTo(Double value) {
            addCriterion("accurate_checpower >=", value, "accurateChecpower");
            return (Criteria) this;
        }

        public Criteria andAccurateChecpowerLessThan(Double value) {
            addCriterion("accurate_checpower <", value, "accurateChecpower");
            return (Criteria) this;
        }

        public Criteria andAccurateChecpowerLessThanOrEqualTo(Double value) {
            addCriterion("accurate_checpower <=", value, "accurateChecpower");
            return (Criteria) this;
        }

        public Criteria andAccurateChecpowerIn(List<Double> values) {
            addCriterion("accurate_checpower in", values, "accurateChecpower");
            return (Criteria) this;
        }

        public Criteria andAccurateChecpowerNotIn(List<Double> values) {
            addCriterion("accurate_checpower not in", values, "accurateChecpower");
            return (Criteria) this;
        }

        public Criteria andAccurateChecpowerBetween(Double value1, Double value2) {
            addCriterion("accurate_checpower between", value1, value2, "accurateChecpower");
            return (Criteria) this;
        }

        public Criteria andAccurateChecpowerNotBetween(Double value1, Double value2) {
            addCriterion("accurate_checpower not between", value1, value2, "accurateChecpower");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table accu_pass_rate
     *
     * @mbg.generated do_not_delete_during_merge Tue Jan 29 11:11:08 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table accu_pass_rate
     *
     * @mbg.generated Tue Jan 29 11:11:08 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}