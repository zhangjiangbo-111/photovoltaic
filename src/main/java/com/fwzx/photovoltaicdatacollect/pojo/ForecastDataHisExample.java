package com.fwzx.photovoltaicdatacollect.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class ForecastDataHisExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    public ForecastDataHisExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andDataTimeIsNull() {
            addCriterion("data_time is null");
            return (Criteria) this;
        }

        public Criteria andDataTimeIsNotNull() {
            addCriterion("data_time is not null");
            return (Criteria) this;
        }

        public Criteria andDataTimeEqualTo(Date value) {
            addCriterion("data_time =", value, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeNotEqualTo(Date value) {
            addCriterion("data_time <>", value, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeGreaterThan(Date value) {
            addCriterion("data_time >", value, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("data_time >=", value, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeLessThan(Date value) {
            addCriterion("data_time <", value, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeLessThanOrEqualTo(Date value) {
            addCriterion("data_time <=", value, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeIn(List<Date> values) {
            addCriterion("data_time in", values, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeNotIn(List<Date> values) {
            addCriterion("data_time not in", values, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeBetween(Date value1, Date value2) {
            addCriterion("data_time between", value1, value2, "dataTime");
            return (Criteria) this;
        }

        public Criteria andDataTimeNotBetween(Date value1, Date value2) {
            addCriterion("data_time not between", value1, value2, "dataTime");
            return (Criteria) this;
        }

        public Criteria andTotalRadiationIsNull() {
            addCriterion("total_radiation is null");
            return (Criteria) this;
        }

        public Criteria andTotalRadiationIsNotNull() {
            addCriterion("total_radiation is not null");
            return (Criteria) this;
        }

        public Criteria andTotalRadiationEqualTo(Double value) {
            addCriterion("total_radiation =", value, "totalRadiation");
            return (Criteria) this;
        }

        public Criteria andTotalRadiationNotEqualTo(Double value) {
            addCriterion("total_radiation <>", value, "totalRadiation");
            return (Criteria) this;
        }

        public Criteria andTotalRadiationGreaterThan(Double value) {
            addCriterion("total_radiation >", value, "totalRadiation");
            return (Criteria) this;
        }

        public Criteria andTotalRadiationGreaterThanOrEqualTo(Double value) {
            addCriterion("total_radiation >=", value, "totalRadiation");
            return (Criteria) this;
        }

        public Criteria andTotalRadiationLessThan(Double value) {
            addCriterion("total_radiation <", value, "totalRadiation");
            return (Criteria) this;
        }

        public Criteria andTotalRadiationLessThanOrEqualTo(Double value) {
            addCriterion("total_radiation <=", value, "totalRadiation");
            return (Criteria) this;
        }

        public Criteria andTotalRadiationIn(List<Double> values) {
            addCriterion("total_radiation in", values, "totalRadiation");
            return (Criteria) this;
        }

        public Criteria andTotalRadiationNotIn(List<Double> values) {
            addCriterion("total_radiation not in", values, "totalRadiation");
            return (Criteria) this;
        }

        public Criteria andTotalRadiationBetween(Double value1, Double value2) {
            addCriterion("total_radiation between", value1, value2, "totalRadiation");
            return (Criteria) this;
        }

        public Criteria andTotalRadiationNotBetween(Double value1, Double value2) {
            addCriterion("total_radiation not between", value1, value2, "totalRadiation");
            return (Criteria) this;
        }

        public Criteria andScattRadiationIsNull() {
            addCriterion("scatt_radiation is null");
            return (Criteria) this;
        }

        public Criteria andScattRadiationIsNotNull() {
            addCriterion("scatt_radiation is not null");
            return (Criteria) this;
        }

        public Criteria andScattRadiationEqualTo(Double value) {
            addCriterion("scatt_radiation =", value, "scattRadiation");
            return (Criteria) this;
        }

        public Criteria andScattRadiationNotEqualTo(Double value) {
            addCriterion("scatt_radiation <>", value, "scattRadiation");
            return (Criteria) this;
        }

        public Criteria andScattRadiationGreaterThan(Double value) {
            addCriterion("scatt_radiation >", value, "scattRadiation");
            return (Criteria) this;
        }

        public Criteria andScattRadiationGreaterThanOrEqualTo(Double value) {
            addCriterion("scatt_radiation >=", value, "scattRadiation");
            return (Criteria) this;
        }

        public Criteria andScattRadiationLessThan(Double value) {
            addCriterion("scatt_radiation <", value, "scattRadiation");
            return (Criteria) this;
        }

        public Criteria andScattRadiationLessThanOrEqualTo(Double value) {
            addCriterion("scatt_radiation <=", value, "scattRadiation");
            return (Criteria) this;
        }

        public Criteria andScattRadiationIn(List<Double> values) {
            addCriterion("scatt_radiation in", values, "scattRadiation");
            return (Criteria) this;
        }

        public Criteria andScattRadiationNotIn(List<Double> values) {
            addCriterion("scatt_radiation not in", values, "scattRadiation");
            return (Criteria) this;
        }

        public Criteria andScattRadiationBetween(Double value1, Double value2) {
            addCriterion("scatt_radiation between", value1, value2, "scattRadiation");
            return (Criteria) this;
        }

        public Criteria andScattRadiationNotBetween(Double value1, Double value2) {
            addCriterion("scatt_radiation not between", value1, value2, "scattRadiation");
            return (Criteria) this;
        }

        public Criteria andVertiRadiationIsNull() {
            addCriterion("verti_radiation is null");
            return (Criteria) this;
        }

        public Criteria andVertiRadiationIsNotNull() {
            addCriterion("verti_radiation is not null");
            return (Criteria) this;
        }

        public Criteria andVertiRadiationEqualTo(Double value) {
            addCriterion("verti_radiation =", value, "vertiRadiation");
            return (Criteria) this;
        }

        public Criteria andVertiRadiationNotEqualTo(Double value) {
            addCriterion("verti_radiation <>", value, "vertiRadiation");
            return (Criteria) this;
        }

        public Criteria andVertiRadiationGreaterThan(Double value) {
            addCriterion("verti_radiation >", value, "vertiRadiation");
            return (Criteria) this;
        }

        public Criteria andVertiRadiationGreaterThanOrEqualTo(Double value) {
            addCriterion("verti_radiation >=", value, "vertiRadiation");
            return (Criteria) this;
        }

        public Criteria andVertiRadiationLessThan(Double value) {
            addCriterion("verti_radiation <", value, "vertiRadiation");
            return (Criteria) this;
        }

        public Criteria andVertiRadiationLessThanOrEqualTo(Double value) {
            addCriterion("verti_radiation <=", value, "vertiRadiation");
            return (Criteria) this;
        }

        public Criteria andVertiRadiationIn(List<Double> values) {
            addCriterion("verti_radiation in", values, "vertiRadiation");
            return (Criteria) this;
        }

        public Criteria andVertiRadiationNotIn(List<Double> values) {
            addCriterion("verti_radiation not in", values, "vertiRadiation");
            return (Criteria) this;
        }

        public Criteria andVertiRadiationBetween(Double value1, Double value2) {
            addCriterion("verti_radiation between", value1, value2, "vertiRadiation");
            return (Criteria) this;
        }

        public Criteria andVertiRadiationNotBetween(Double value1, Double value2) {
            addCriterion("verti_radiation not between", value1, value2, "vertiRadiation");
            return (Criteria) this;
        }

        public Criteria andWindSIsNull() {
            addCriterion("wind_s is null");
            return (Criteria) this;
        }

        public Criteria andWindSIsNotNull() {
            addCriterion("wind_s is not null");
            return (Criteria) this;
        }

        public Criteria andWindSEqualTo(Double value) {
            addCriterion("wind_s =", value, "windS");
            return (Criteria) this;
        }

        public Criteria andWindSNotEqualTo(Double value) {
            addCriterion("wind_s <>", value, "windS");
            return (Criteria) this;
        }

        public Criteria andWindSGreaterThan(Double value) {
            addCriterion("wind_s >", value, "windS");
            return (Criteria) this;
        }

        public Criteria andWindSGreaterThanOrEqualTo(Double value) {
            addCriterion("wind_s >=", value, "windS");
            return (Criteria) this;
        }

        public Criteria andWindSLessThan(Double value) {
            addCriterion("wind_s <", value, "windS");
            return (Criteria) this;
        }

        public Criteria andWindSLessThanOrEqualTo(Double value) {
            addCriterion("wind_s <=", value, "windS");
            return (Criteria) this;
        }

        public Criteria andWindSIn(List<Double> values) {
            addCriterion("wind_s in", values, "windS");
            return (Criteria) this;
        }

        public Criteria andWindSNotIn(List<Double> values) {
            addCriterion("wind_s not in", values, "windS");
            return (Criteria) this;
        }

        public Criteria andWindSBetween(Double value1, Double value2) {
            addCriterion("wind_s between", value1, value2, "windS");
            return (Criteria) this;
        }

        public Criteria andWindSNotBetween(Double value1, Double value2) {
            addCriterion("wind_s not between", value1, value2, "windS");
            return (Criteria) this;
        }

        public Criteria andWindDIsNull() {
            addCriterion("wind_d is null");
            return (Criteria) this;
        }

        public Criteria andWindDIsNotNull() {
            addCriterion("wind_d is not null");
            return (Criteria) this;
        }

        public Criteria andWindDEqualTo(Double value) {
            addCriterion("wind_d =", value, "windD");
            return (Criteria) this;
        }

        public Criteria andWindDNotEqualTo(Double value) {
            addCriterion("wind_d <>", value, "windD");
            return (Criteria) this;
        }

        public Criteria andWindDGreaterThan(Double value) {
            addCriterion("wind_d >", value, "windD");
            return (Criteria) this;
        }

        public Criteria andWindDGreaterThanOrEqualTo(Double value) {
            addCriterion("wind_d >=", value, "windD");
            return (Criteria) this;
        }

        public Criteria andWindDLessThan(Double value) {
            addCriterion("wind_d <", value, "windD");
            return (Criteria) this;
        }

        public Criteria andWindDLessThanOrEqualTo(Double value) {
            addCriterion("wind_d <=", value, "windD");
            return (Criteria) this;
        }

        public Criteria andWindDIn(List<Double> values) {
            addCriterion("wind_d in", values, "windD");
            return (Criteria) this;
        }

        public Criteria andWindDNotIn(List<Double> values) {
            addCriterion("wind_d not in", values, "windD");
            return (Criteria) this;
        }

        public Criteria andWindDBetween(Double value1, Double value2) {
            addCriterion("wind_d between", value1, value2, "windD");
            return (Criteria) this;
        }

        public Criteria andWindDNotBetween(Double value1, Double value2) {
            addCriterion("wind_d not between", value1, value2, "windD");
            return (Criteria) this;
        }

        public Criteria andTemIsNull() {
            addCriterion("tem is null");
            return (Criteria) this;
        }

        public Criteria andTemIsNotNull() {
            addCriterion("tem is not null");
            return (Criteria) this;
        }

        public Criteria andTemEqualTo(Double value) {
            addCriterion("tem =", value, "tem");
            return (Criteria) this;
        }

        public Criteria andTemNotEqualTo(Double value) {
            addCriterion("tem <>", value, "tem");
            return (Criteria) this;
        }

        public Criteria andTemGreaterThan(Double value) {
            addCriterion("tem >", value, "tem");
            return (Criteria) this;
        }

        public Criteria andTemGreaterThanOrEqualTo(Double value) {
            addCriterion("tem >=", value, "tem");
            return (Criteria) this;
        }

        public Criteria andTemLessThan(Double value) {
            addCriterion("tem <", value, "tem");
            return (Criteria) this;
        }

        public Criteria andTemLessThanOrEqualTo(Double value) {
            addCriterion("tem <=", value, "tem");
            return (Criteria) this;
        }

        public Criteria andTemIn(List<Double> values) {
            addCriterion("tem in", values, "tem");
            return (Criteria) this;
        }

        public Criteria andTemNotIn(List<Double> values) {
            addCriterion("tem not in", values, "tem");
            return (Criteria) this;
        }

        public Criteria andTemBetween(Double value1, Double value2) {
            addCriterion("tem between", value1, value2, "tem");
            return (Criteria) this;
        }

        public Criteria andTemNotBetween(Double value1, Double value2) {
            addCriterion("tem not between", value1, value2, "tem");
            return (Criteria) this;
        }

        public Criteria andHumiIsNull() {
            addCriterion("humi is null");
            return (Criteria) this;
        }

        public Criteria andHumiIsNotNull() {
            addCriterion("humi is not null");
            return (Criteria) this;
        }

        public Criteria andHumiEqualTo(Double value) {
            addCriterion("humi =", value, "humi");
            return (Criteria) this;
        }

        public Criteria andHumiNotEqualTo(Double value) {
            addCriterion("humi <>", value, "humi");
            return (Criteria) this;
        }

        public Criteria andHumiGreaterThan(Double value) {
            addCriterion("humi >", value, "humi");
            return (Criteria) this;
        }

        public Criteria andHumiGreaterThanOrEqualTo(Double value) {
            addCriterion("humi >=", value, "humi");
            return (Criteria) this;
        }

        public Criteria andHumiLessThan(Double value) {
            addCriterion("humi <", value, "humi");
            return (Criteria) this;
        }

        public Criteria andHumiLessThanOrEqualTo(Double value) {
            addCriterion("humi <=", value, "humi");
            return (Criteria) this;
        }

        public Criteria andHumiIn(List<Double> values) {
            addCriterion("humi in", values, "humi");
            return (Criteria) this;
        }

        public Criteria andHumiNotIn(List<Double> values) {
            addCriterion("humi not in", values, "humi");
            return (Criteria) this;
        }

        public Criteria andHumiBetween(Double value1, Double value2) {
            addCriterion("humi between", value1, value2, "humi");
            return (Criteria) this;
        }

        public Criteria andHumiNotBetween(Double value1, Double value2) {
            addCriterion("humi not between", value1, value2, "humi");
            return (Criteria) this;
        }

        public Criteria andPressIsNull() {
            addCriterion("press is null");
            return (Criteria) this;
        }

        public Criteria andPressIsNotNull() {
            addCriterion("press is not null");
            return (Criteria) this;
        }

        public Criteria andPressEqualTo(Double value) {
            addCriterion("press =", value, "press");
            return (Criteria) this;
        }

        public Criteria andPressNotEqualTo(Double value) {
            addCriterion("press <>", value, "press");
            return (Criteria) this;
        }

        public Criteria andPressGreaterThan(Double value) {
            addCriterion("press >", value, "press");
            return (Criteria) this;
        }

        public Criteria andPressGreaterThanOrEqualTo(Double value) {
            addCriterion("press >=", value, "press");
            return (Criteria) this;
        }

        public Criteria andPressLessThan(Double value) {
            addCriterion("press <", value, "press");
            return (Criteria) this;
        }

        public Criteria andPressLessThanOrEqualTo(Double value) {
            addCriterion("press <=", value, "press");
            return (Criteria) this;
        }

        public Criteria andPressIn(List<Double> values) {
            addCriterion("press in", values, "press");
            return (Criteria) this;
        }

        public Criteria andPressNotIn(List<Double> values) {
            addCriterion("press not in", values, "press");
            return (Criteria) this;
        }

        public Criteria andPressBetween(Double value1, Double value2) {
            addCriterion("press between", value1, value2, "press");
            return (Criteria) this;
        }

        public Criteria andPressNotBetween(Double value1, Double value2) {
            addCriterion("press not between", value1, value2, "press");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table forecast_data_his
     *
     * @mbg.generated do_not_delete_during_merge Thu Jan 17 15:19:37 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table forecast_data_his
     *
     * @mbg.generated Thu Jan 17 15:19:37 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}