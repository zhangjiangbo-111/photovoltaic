<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fwzx.photovoltaicdatacollect.dao.ForecastDataRtMapper">
	<resultMap id="BaseResultMap"
		type="com.fwzx.photovoltaicdatacollect.pojo.ForecastDataRt">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Jan 17 
			12:57:15 CST 2019. -->
		<result column="data_time" jdbcType="TIMESTAMP" property="dataTime" />
		<result column="total_radiation" jdbcType="DOUBLE" property="totalRadiation" />
		<result column="scatt_radiation" jdbcType="DOUBLE" property="scattRadiation" />
		<result column="verti_radiation" jdbcType="DOUBLE" property="vertiRadiation" />
		<result column="wind_s" jdbcType="DOUBLE" property="windS" />
		<result column="wind_d" jdbcType="DOUBLE" property="windD" />
		<result column="tem" jdbcType="DOUBLE" property="tem" />
		<result column="humi" jdbcType="DOUBLE" property="humi" />
		<result column="press" jdbcType="DOUBLE" property="press" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Jan 17 
			12:57:15 CST 2019. -->
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Jan 17 
			12:57:15 CST 2019. -->
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" prefixOverrides="and" suffix=")">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach close=")" collection="criterion.value" item="listItem"
										open="(" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Jan 17 
			12:57:15 CST 2019. -->
		data_time, total_radiation, scatt_radiation, verti_radiation, wind_s,
		wind_d, tem,
		humi, press
	</sql>
	<select id="selectByExample"
		parameterType="com.fwzx.photovoltaicdatacollect.pojo.ForecastDataRtExample"
		resultMap="BaseResultMap">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Jan 17 
			12:57:15 CST 2019. -->
		select
		<if test="distinct">
			distinct
		</if>
		'true' as QUERYID,
		<include refid="Base_Column_List" />
		from forecast_data_rt
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<delete id="deleteByExample"
		parameterType="com.fwzx.photovoltaicdatacollect.pojo.ForecastDataRtExample">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Jan 17 
			12:57:15 CST 2019. -->
		delete from forecast_data_rt
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="com.fwzx.photovoltaicdatacollect.pojo.ForecastDataRt">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Jan 17 
			12:57:15 CST 2019. -->
		insert into forecast_data_rt (data_time, total_radiation,
		scatt_radiation,
		verti_radiation, wind_s, wind_d,
		tem, humi, press)
		values (#{dataTime,jdbcType=TIMESTAMP},
		#{totalRadiation,jdbcType=DOUBLE},
		#{scattRadiation,jdbcType=DOUBLE},
		#{vertiRadiation,jdbcType=DOUBLE}, #{windS,jdbcType=DOUBLE},
		#{windD,jdbcType=DOUBLE},
		#{tem,jdbcType=DOUBLE},
		#{humi,jdbcType=DOUBLE},
		#{press,jdbcType=DOUBLE})
	</insert>
	<insert id="insertSelective"
		parameterType="com.fwzx.photovoltaicdatacollect.pojo.ForecastDataRt">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Jan 17 
			12:57:15 CST 2019. -->
		insert into forecast_data_rt
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="dataTime != null">
				data_time,
			</if>
			<if test="totalRadiation != null">
				total_radiation,
			</if>
			<if test="scattRadiation != null">
				scatt_radiation,
			</if>
			<if test="vertiRadiation != null">
				verti_radiation,
			</if>
			<if test="windS != null">
				wind_s,
			</if>
			<if test="windD != null">
				wind_d,
			</if>
			<if test="tem != null">
				tem,
			</if>
			<if test="humi != null">
				humi,
			</if>
			<if test="press != null">
				press,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="dataTime != null">
				#{dataTime,jdbcType=TIMESTAMP},
			</if>
			<if test="totalRadiation != null">
				#{totalRadiation,jdbcType=DOUBLE},
			</if>
			<if test="scattRadiation != null">
				#{scattRadiation,jdbcType=DOUBLE},
			</if>
			<if test="vertiRadiation != null">
				#{vertiRadiation,jdbcType=DOUBLE},
			</if>
			<if test="windS != null">
				#{windS,jdbcType=DOUBLE},
			</if>
			<if test="windD != null">
				#{windD,jdbcType=DOUBLE},
			</if>
			<if test="tem != null">
				#{tem,jdbcType=DOUBLE},
			</if>
			<if test="humi != null">
				#{humi,jdbcType=DOUBLE},
			</if>
			<if test="press != null">
				#{press,jdbcType=DOUBLE},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.fwzx.photovoltaicdatacollect.pojo.ForecastDataRtExample"
		resultType="java.lang.Long">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Jan 17 
			12:57:15 CST 2019. -->
		select count(*) from forecast_data_rt
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Jan 17 
			12:57:15 CST 2019. -->
		update forecast_data_rt
		<set>
			<if test="record.dataTime != null">
				data_time = #{record.dataTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.totalRadiation != null">
				total_radiation =
				#{record.totalRadiation,jdbcType=DOUBLE},
			</if>
			<if test="record.scattRadiation != null">
				scatt_radiation =
				#{record.scattRadiation,jdbcType=DOUBLE},
			</if>
			<if test="record.vertiRadiation != null">
				verti_radiation =
				#{record.vertiRadiation,jdbcType=DOUBLE},
			</if>
			<if test="record.windS != null">
				wind_s = #{record.windS,jdbcType=DOUBLE},
			</if>
			<if test="record.windD != null">
				wind_d = #{record.windD,jdbcType=DOUBLE},
			</if>
			<if test="record.tem != null">
				tem = #{record.tem,jdbcType=DOUBLE},
			</if>
			<if test="record.humi != null">
				humi = #{record.humi,jdbcType=DOUBLE},
			</if>
			<if test="record.press != null">
				press = #{record.press,jdbcType=DOUBLE},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		<!-- WARNING - @mbg.generated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Thu Jan 17 
			12:57:15 CST 2019. -->
		update forecast_data_rt
		set data_time =
		#{record.dataTime,jdbcType=TIMESTAMP},
		total_radiation =
		#{record.totalRadiation,jdbcType=DOUBLE},
		scatt_radiation =
		#{record.scattRadiation,jdbcType=DOUBLE},
		verti_radiation =
		#{record.vertiRadiation,jdbcType=DOUBLE},
		wind_s =
		#{record.windS,jdbcType=DOUBLE},
		wind_d =
		#{record.windD,jdbcType=DOUBLE},
		tem = #{record.tem,jdbcType=DOUBLE},
		humi = #{record.humi,jdbcType=DOUBLE},
		press =
		#{record.press,jdbcType=DOUBLE}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>

	<delete id="deleteAllData">
		delete from forecast_data_rt
	</delete>

	<insert id="insertDataByStr">
		insert into forecast_data_rt
		values
		${dataStr}
	</insert>

	<select id="selectForecastDataRtByTime" resultMap="BaseResultMap">
		select * from forecast_data_rt
		where data_time between ${beginDate} and ${endDate}
		order by data_time
	</select>

</mapper>